version: '3.8'

services:
  classicpos:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: classicpos-app
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "5000:5000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    volumes:
      # Persist database
      - ./backend/classicpos.db:/app/backend/classicpos.db
      # Persist logs
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - classicpos-network

networks:
  classicpos-network:
    driver: bridge

# Optional: Add nginx reverse proxy for production
# services:
#   nginx:
#     image: nginx:alpine
#     container_name: classicpos-nginx
#     restart: unless-stopped
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf:ro
#       - ./ssl:/etc/nginx/ssl:ro
#     depends_on:
#       - classicpos
#     networks:
#       - classicpos-network
